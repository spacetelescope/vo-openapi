# Universal Worker Service (UWS) API Pattern
# OpenAPI 3.0.2
# Example of a UWS API pattern based on the IVOA UWS 1.1 specification, using OpenAPI schema models.
# Not guaranteed to be complete or correct.
openapi: '3.0.2'
info:
  title: Universal Worker Service (UWS)
  version: '1.0'
servers:
  - url: https://mast.stsci.edu/vo-tap/api/v0.1/hsc/async

paths:
  /:
    get:
      description: 'Returns the job list'
      parameters:
        - name: PHASE
          in: query
          description: 'Execution phase of the job to filter for'
          schema:
            $ref: '#/components/schemas/ExecutionPhase'
        - name: AFTER
          in: query
          description: 'Return jobs submitted after this date'
          schema:
            type: string
            format: date-time
        - name: LAST
          in: query
          description: 'Return only the last N jobs'
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: 'Success'
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Jobs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
    post:
      description: 'Submits a job'
      requestBody:
        description: 'Job parameters'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                # Examples for TAP implementation
                QUERY:
                  type: string
                  description: 'The query to be performed'
                  example: 'SELECT * FROM TAP_SCHEMA.tables'
                LANG:
                  type: string
                  description: 'The language in which the query should be performed'
                  example: 'ADQL'
              additionalProperties: true
      responses:
        '303':
          description: 'Success'
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/JobSummary'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job description'
      parameters:
        - name: PHASE
          in: query
          description: 'Phase of the job to poll for'
          schema:
            type: string
            enum:
              - "PENDING"
              - "QUEUED"
              - "EXECUTING"
            example: "PENDING"
        - name: WAIT
          in: query
          description: 'Maximum time to wait for the job to change phases.'
          schema:
            type: integer
            minimum: -1
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
    post:
      description: Update job parameters
      parameters:
        - $ref: '#/components/parameters/job-id'
      requestBody:
        description: 'Parameters to update'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PHASE:
                  type: string
                  enum:
                    - "RUN"
                    - "ABORT"
                    - "SUSPEND"
                    - "ARCHIVE"
                DESTRUCTION:
                  type: string
                  format: date-time
                ACTION:
                  type: string
                  enum:
                    - "DELETE"
      responses:
        '200':
          description: Success (when updating a job.)
          content:
            text/plain:
              schema:
                type: string
                format: date-time
            application/xml:
              schema:
                $ref: '#/components/schemas/JobSummary'
        '303':
          description: Success (when deleting a job.)
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Jobs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
    delete:
      description: 'Deletes the job'
      parameters:
        - $ref: '#/components/parameters/job-id'
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Jobs'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/phase:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job phase'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ExecutionPhase'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
    post:
      description: 'Updates the job phase'
      requestBody:
        description: 'Phase to update'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PHASE:
                  type: string
                  enum:
                    - "RUN"
                    - "ABORT"
                    - "SUSPEND"
                    - "ARCHIVE"
      responses:
        '303':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/JobSummary'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/executionduration:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job execution duration'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
    post:
      description: 'Updates the job execution duration'
      requestBody:
        description: 'Execution duration to update'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EXECUTIONDURATION:
                  type: integer
      responses:
        '303':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/JobSummary'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/destruction:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job destruction time'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: date-time
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
    post:
      description: 'Updates the job destruction time'
      requestBody:
        description: 'Destruction time to update'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DESTRUCTION:
                  type: string
                  format: date-time
      responses:
        '303':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: date-time
            application/xml:
              schema:
                $ref: '#/components/schemas/JobSummary'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/error:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job error summary'
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorSummary'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/quote:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job quote'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: date-time
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/parameters:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job parameters'
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Parameters'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
    post:
      description: 'Update job parameters'
      requestBody:
        description: 'Destruction time to update'
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                # TAP service examples
                QUERY:
                  description: 'TAP query string'
                  type: string
                LANG:
                  description: 'Query language'
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/JobSummary'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/results:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job results'
      responses:
        '200':
          description: Success
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Results'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
  /{job-id}/owner:
    parameters:
      - $ref: '#/components/parameters/job-id'
    get:
      description: 'Returns the job owner'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/JobNotFound'
components:
  responses:
    JobNotFound:
      description: 'Job not found'
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/VOTableErrorMessage'
    Forbidden:
      description: 'Forbidden'
      content:
        application/xml:
          schema:
            $ref: '#/components/schemas/VOTableErrorMessage'
  parameters:
    job-id:
      name: job-id
      in: path
      description: 'Job ID'
      required: true
      schema:
        type: string
  schemas:
    INFO-OBJECT:
      type: object
      title: INFO
      properties:
        name_attr:
          type: string
          description: 'name attribute'
          example: 'QUERY_STATUS'
          xml:
            name: 'name'
            attribute: true
        value_attr:
          type: string
          description: 'info value'
          example: 'ERROR'
          xml:
            name: 'value'
            attribute: true
    VOTableErrorMessage:
      type: object
      title: 'VOTABLE'
      xml:
        name: 'VOTABLE'
      properties:
        DESCRIPTION:
          type: string
          description: 'System Description'
          example: 'MAST VO TAP Service'
        INFO:
          $ref: '#/components/schemas/INFO-OBJECT'
    ShortJobDescription:
      type: object
      title: shortJobDescription
      required: [id]
      properties:
        phase:
          $ref: '#/components/schemas/ExecutionPhase'
        runId:
          type: string
          maxItems: 1
          description: |
            This is a client supplied identifier - the UWS system
            does nothing other than to return it as part of the
            description of the job
          example: 'JWST-1234'
        ownerId:
          type: string
          nullable: true
          description: |
            The owner (creator) of the job - this should be
            expressed as a string that can be parsed in accordance
            with IVOA security standards. If there was no
            authenticated job creator then this should be set to
            NULL.
          example: 'Noirlab/John.Smith'
        creationTime:
          type: string
          format: date-time
          nullable: false
          description: |
            The instant at which the job was created.
        id:
          type: string
          description: |
            The identifier for the job
          example: 'HSC_XYZ_123'
          xml:
            attribute: true
        type:
          type: string
          description: |
            xlink type
          default: simple
          xml:
            prefix: 'xlink'
            namespace: 'http://www.w3.org/1999/xlink'
            attribute: true
        href:
          type: string
          description: |
            xlink href
          example: '.../jobs/HSC_XYZ_123'
          xml:
            prefix: 'xlink'
            namespace: 'http://www.w3.org/1999/xlink'
            attribute: true
    ExecutionPhase:
      type: string
      title: executionPhase
      description: |
        Enumeration of possible phases of job execution

        PENDING: The first phase a job is entered into - this is where
              a job is being set up but no request to run has
              occurred.

        QUEUED: A job has been accepted for execution but is waiting
              in a queue

        EXECUTING: A job is running

        COMPLETED: A job has completed successfully

        ERROR: Some form of error has occurred

        UNKNOWN: The job is in an unknown state.

        HELD: The job is HELD pending execution and will not
              automatically be executed - can occur after a
              PHASE=RUN request has been made (cf PENDING).

        SUSPENDED: The job has been suspended by the system during
              execution

        ABORTED: The job has been aborted, either by user request or by
              the server because of lack or overuse of resources.

        ARCHIVED: The job has been archived by the server at destruction time. An archived job
              may have deleted the results to reclaim resources, but must have job metadata preserved.
              This is an alternative that the server may choose in contrast to completely destroying all record of the job.
      enum:
        - PENDING
        - QUEUED
        - EXECUTING
        - COMPLETED
        - ERROR
        - UNKNOWN
        - HELD
        - SUSPENDED
        - ABORTED
        - ARCHIVED
    JobSummary:
      type: object
      description: |
        The complete representation of the state of a job
      title: jobSummary
      required: [jobId]
      properties:
        jobId:
          type: string
          description: |
            The identifier for the job
          example: 'HSC_XYZ_123'
        runId:
          type: string
          maxItems: 1
          description: |
            this is a client supplied identifier - the UWS system
            does nothing other than to return it as part of the
            description of the job
          example: 'JWST-1234'
        ownerId:
          type: string
          nullable: true
          description: |
            The owner (creator) of the job - this should be
            expressed as a string that can be parsed in accordance
            with IVOA security standards. If there was no
            authenticated job creator then this should be set to
            NULL.
          example: 'Noirlab/John.Smith'
        phase:
          $ref: '#/components/schemas/ExecutionPhase'
        quote:
          type: string
          format: date-time
          maxItems: 1
          nullable: true
          description: |
            A Quote predicts when the job is likely to complete -
            returned at /{jobs}/{job-id}/quote "don't know" is
            encoded by setting to the XML null value
            xsi:nil="true"
        creationTime:
          type: string
          format: date-time
          maxItems: 1
          description: |
            The instant at which the job was created.

            Note that the version 1.1 of the specification requires that this element be present.
            It is optional only in versions 1.x of the schema for backwards compatibility.
            2.0+ versions of the schema will make this formally mandatory in an XML sense.
        startTime:
          type: string
          format: date-time
          nullable: true
          description: |
            The instant at which the job started execution.
        endTime:
          type: string
          format: date-time
          nullable: true
          description: |
            The instant at which the job finished execution.
        executionDuration:
          type: integer
          nullable: false
          description: |
            The duration (in seconds) for which the job should be
            allowed to run - a value of 0 is intended to mean
            unlimited - returned at
            /{jobs}/{job-id}/executionduration
        destruction:
          type: string
          format: date-time
          nullable: true
          description: |
            The time at which the whole job + records + results
            will be destroyed. Returned at /{jobs}/{job-id}/destruction
        parameters:
          $ref: '#/components/schemas/Parameters'
        results:
          $ref: '#/components/schemas/Results'
        errorSummary:
          $ref: '#/components/schemas/ErrorSummary'
        jobInfo:
          type: string
          maxItems: 1
          description: |
            This is arbitrary information that can be added to the
            job description by the UWS implementation.
        version:
          $ref: '#/components/schemas/UWSVersion'
    UWSVersion:
      type: string
      title: UWSVersion
      description: |
        The version of the UWS standard that the server complies with.
      enum:
        - "1.0"
        - "1.1"
      xml:
        prefix: 'uws'
        attribute: true
    Job:
      type: object
      allOf: [
        $ref: '#/components/schemas/JobSummary']
      title: job
      description: |
        This is the information that is returned
        when a GET is made for a single job resource - i.e.
        /{jobs}/{job-id}
      xml:
        name: job
    Jobs:
      type: object
      title: jobs
      description: |
        The list of job references returned at /(jobs)

        The list presented may be affected by the current security context and may be filtered
      properties:
        jobref:
          type: array
          items:
            $ref: '#/components/schemas/ShortJobDescription'
        version:
          $ref: '#/components/schemas/UWSVersion'
      xml:
        name: jobs
    ResultReference:
      type: object
      title: resultReference
      description: |
        A reference to a UWS result
      required:
        - id
      properties:
        id:
          type: string
          xml:
            attribute: true
        reference:
          type: string
          description: |
            The URL that can be used to retrieve the result
          xml:
            attribute: true
            prefix: uws
        size:
          type: number
          xml:
            attribute: true
        mime-type:
          type: string
          xml:
            attribute: true
    Results:
      type: object
      title: results
      description: |
        The element returned for /{jobs}/{job-id}/results
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ResultReference'
      xml:
        name: results
    ErrorSummary:
      type: object
      title: errorSummary
      description: |
        A short summary of an error - a fuller representation of the
        error may be retrieved from /{jobs}/{job-id}/error
      required:
        - type
        - hasDetail
      properties:
        message:
          type: string
          description: |
            A short message describing the error
          example: 'Error Message'
        hasDetail:
          type: boolean
          xml:
            attribute: true
        type:
          type: string
          description: |
            characterization of the type of the error
          enum:
            - transient
            - fatal
          xml:
            attribute: true
      xml:
        name: errorSummary
    Parameter:
      type: object
      title: parameter
      description: |
        The list of input parameters to the job - if
        the job description language does not naturally have
        parameters, then this list should contain one element which
        is the content of the original POST that created the job.
      required:
        - id
      properties:
        byReference:
          type: boolean
          default: false
          description: |
            If this attribute is true then the
            content of the parameter represents a URL to retrieve the
            actual parameter value.

            It is up to the implementation to decide
            if a parameter value cannot be returned directly as the
            content - the basic rule is that the representation of
            the parameter must allow the whole job element to be
            valid XML. If this cannot be achieved then the parameter
            value must be returned by reference.
          xml:
            attribute: true
        id:
          type: string
          description: |
            The identifier for the parameter
          xml:
            attribute: true
        isPost:
          type: boolean
          xml:
            attribute: true
      xml:
        name: parameter
    Parameters:
      type: object
      title: parameters
      properties:
        parameter:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'